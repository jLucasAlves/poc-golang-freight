version: 2.1
parameters:
  rollback:
    type: boolean
    default: false
    description: Arbitraty parameter to trigger manually this workflow selecting rollback actions
  version:
    type: string
    default: ""
    description: The commit hash to revert deployment
# including dft org
orbs:
  dft: dafiti-group/orb-standard-pipeline@1.1.2
# reserved filters anchors
test_filters: &test_filters
  branches:
    only: [/^feature.*/, /^hotfix.*/]
deployment_filters: &deployment_filters
  branches:
    only: [/^release.*/, /^hotfix.*/]
head_filters: &head_filters
  branches:
    only: [master, main]
release_filters: &release_filters
  branches:
    only: [/^release.*/]
hotfix_filters: &hotfix_filters
  branches:
    only: [/^hotfix.*/]
# declaring your workflows
workflows:
  rollback-flow:
    when:
      or:
        - equal: [true, <<pipeline.parameters.rollback>>]
    jobs:
      - dft/eks-deploy:
          name: rollback-live
          context: [DEFAULT]
          rollback: <<pipeline.parameters.rollback>>
          version: <<pipeline.parameters.version>>
          deployment_path: argo/clusters/eks-live-dafiti/apps
          filters: *head_filters
  deployment-flow:
    when:
      or:
        - equal: [false, <<pipeline.parameters.rollback>>]
    jobs:
      # features & hotfix =============================================================================================
      - dft/unit-test:
          name: unit-test
          context: [DEFAULT]
          filters: *test_filters
      - dft/sonarqube:
          name: sonarqube
          context: [DEFAULT]
          filters: *test_filters
      - dft/checkmarx:
          name: checkmarx
          context: [DEFAULT]
          filters: *test_filters
      # ===============================================================================================================
      # releases & hotfixes ===========================================================================================
      - dft/hold-slack:
          name: slack-notify-hold-qa
          context: [DEFAULT]
          step_name: ":alert: a new release is awaiting your approve"
          filters: *release_filters
      - approval:
          name: start-to-qa
          type: approval
          filters: *release_filters
      - dft/hold-slack:
          name: slack-notify-hold-hotfix
          context: [DEFAULT]
          step_name: ":alert: the hotfix is waiting your approval to deploy"
          filters: *hotfix_filters
          requires: [unit-test, sonarqube]
      - approval:
          name: approve-to-qa
          type: approval
          filters: *hotfix_filters
          requires: [unit-test, sonarqube]
      - dft/ecr-build-and-push:
          name: ecr-build-and-push
          repo_name: lab-devxp-3
          context: [DEFAULT]
          filters: *deployment_filters
          requires: [unit-test, sonarqube, approve-to-qa, start-to-qa]
      - dft/eks-deploy:
          name: deploy-to-qa
          context: [DEFAULT]
          deployment_path: argo/clusters/eks-qa-dafiti/apps
          requires: [approve-to-qa, ecr-build-and-push]
      - dft/instana-notify:
          name: feedback-instana-qa
          context: [DEFAULT, QA]
          requires: [deploy-to-qa]
      - dft/grafana-notify:
          name: grafana-notify-qa
          target_env: qa
          context: [DEFAULT]
          requires: [deploy-to-qa]
      # TODO: when the staging cluster is available, uncoment the section below
      # - approval:
      #     name: approve-to-staging
      #     type: approval
      #     requires: [deploy-to-qa]
      # - dft/eks-deploy:
      #     name: promote-qa-to-staging
      #     argo_path: argo/clusters/eks-staging-dafiti/apps
      #     context: [TESTS, SLACK]
      #     requires:
      #       - approve-to-staging
      # - dft/instana-notify:
      #     name: feedback-instana-staging
      #     context: [INSTANA, DEPLOY_STAGING, SLACK]
      #     requires: [promote-qa-to-staging]
      # =========================================================================
      # - dft/github-approve:
      #     name: dft-deploy-approve-pr
      #     context: [TESTS, SLACK]
      #     # requires: [promote-qa-to-staging] # when staging is up and running, use this instead of the below
      #     requires: [deploy-to-qa]
      # ===============================================================================================================
      # master & live delivery ========================================================================================
      - dft/github-update:
          name: review-open-pr-to-force-update
          context: [DEFAULT]
          filters: *head_filters
      - dft/hold-slack:
          name: slack-notify-hold-live
          context: [DEFAULT]
          step_name: ":alert: pipeline waiting approval to promote to live"
          filters: *head_filters
      - approval:
          type: approval
          name: approve-deploy-live
          filters: *head_filters
      - dft/eks-promote:
          name: promote-homolog-to-live
          # origin: argo/clusters/eks-stg-dafiti/apps # uncomment when staging is up and running
          origin: argo/clusters/eks-qa-dafiti/apps
          destiny: argo/clusters/eks-live-dafiti/apps
          context: [DEFAULT]
          requires: [approve-deploy-live, review-open-pr-to-force-update]
      - dft/instana-notify:
          name: feedback-instana-live
          context: [DEFAULT, LIVE]
          requires: [promote-homolog-to-live]
      - dft/grafana-notify:
          name: grafana-notify-live
          target_env: live
          context: [DEFAULT]
          requires: [promote-homolog-to-live]
      # ===============================================================================================================
# VS Code Extension Version: 1.5.1
